// schema.prisma

datasource db {
  provider = "postgresql" // Substitua pelo seu banco de dados
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Client {
  id        String    @id @default(uuid()) @map("id")
  name      String    @map("name")
  companies Company[]

  @@map("client")
}

model Company {
  id       String    @id @default(uuid()) @map("id")
  name     String    @map("name")
  clientId String    @map("client_id")
  client   Client    @relation(fields: [clientId], references: [id])
  branches Branch[]
  storages Storage[]
  products Product[]

  @@map("company")
}

model Branch {
  id        String  @id @default(uuid()) @map("id")
  name      String  @map("name")
  companyId String  @map("company_id")
  company   Company @relation(fields: [companyId], references: [id])
  users     User[]  @relation("UsersBranches")

  @@map("branch")
}

model Storage {
  id              String           @id @default(uuid()) @map("id")
  name            String           @map("name")
  companyId       String           @map("company_id")
  company         Company          @relation(fields: [companyId], references: [id])
  productStorages ProductStorage[]

  @@map("storage")
}

model User {
  id       String   @id @default(uuid()) @map("id")
  email    String   @unique @map("email")
  password String   @map("password")
  name     String   @map("name")
  branches Branch[] @relation("UsersBranches")

  @@map("user")
}

model Product {
  id              String           @id @default(uuid()) @map("id")
  name            String           @map("name")
  costPrice       Float            @map("cost_price")
  salePrice       Float            @map("sale_price")
  companyId       String           @map("company_id")
  company         Company          @relation(fields: [companyId], references: [id])
  productStorages ProductStorage[]

  @@map("product")
}

model ProductStorage {
  productId String   @map("product_id")
  storageId String   @map("storage_id")
  quantity  Int      @map("quantity")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  product   Product  @relation(fields: [productId], references: [id])
  storage   Storage  @relation(fields: [storageId], references: [id])

  @@id([productId, storageId])
  @@map("product_storage")
}
